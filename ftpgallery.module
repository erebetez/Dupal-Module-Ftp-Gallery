<?php

/**
 * Implementation of hook_help().
 */
function ftpgallery_help($path, $arg) {
  switch ($path) {
    case 'admin/help#ftpgallery':
      $output = '<p>' . t("Hello Help.") . '</p>';
 
      return $output;
  }
}

/**
* Implementation of hook_node_info().
*/
function ftpgallery_node_info() {
  return array(
    'ftpgallery' => array(
      'name' => t('FTP-Gallery'),
      'module' => 'ftpgallery',
      'description' => "Creates a Gallery out of a folder.",
    )
  );
} 

/**
* Implementation of hook_perm().
*/
function ftpgallery_perm() {
  return array('create ftpgallery', 'edit own ftpgallery');
} 

/**
* Implementation of hook_access().
*/
function ftpgallery_access($op, $node, $account) {

  if ($op == 'create') {
    // Only users with permission to do so may create this node type.
    return user_access('create ftpgallery', $account);
  }

  // Users who create a node may edit or delete it later, assuming they have the
  // necessary permissions.
  if ($op == 'update' || $op == 'delete') {
    if (user_access('edit own ftpgallery', $account) && ($account->uid == $node->uid)) {
      return TRUE;
    }
  }
}

/**
* Implementation of hook_form().
*/
function ftpgallery_form(&$node, $form_state) {
  $type = node_get_types('type', $node);

  if ($type->has_title) {
    $form['title'] = array(
      '#type' => 'textfield', 
      '#title' => check_plain($type->title_label), 
      '#required' => TRUE, 
      '#default_value' => $node->title, 
      '#weight' => -5,
    );
  }

  if ($type->has_body) {
    // In Drupal 6, we use node_body_field() to get the body and filter
    // elements. This replaces the old textarea + filter_form() method of
    // setting this up. It will also ensure the teaser splitter gets set up
    // properly.
    $form['body_field'] = node_body_field($node, $type->body_label, $type->min_word_count);
  }

  // Now we define the form elements specific to our node type.
  $form['url'] = array(
    '#type' => 'textfield', 
    '#title' => t('Url to Folder'), 
    '#default_value' => isset($node->url) ? $node->url : '',
  );

  return $form;
}

function ftpgallery_load($node) {
  $additions = db_fetch_object(db_query('SELECT galleryurl, FROM {ftpgallery_url} WHERE vid = %d', $node->vid));
  return $additions;
}

// function ftpgallery_view($node, $teaser = FALSE, $page = FALSE) {
//   $node = node_prepare($node, $teaser);
//   $node->content['myfield'] = array(
//     '#value' => theme('ftpgallery_order_info', $node), 
//     '#weight' => 1,
//   );
// 
//   return $node;
// }

function ftpgallery_insert($node) {
  db_query("INSERT INTO {ftpgallery_url} (vid, nid, galleryurl) VALUES (%d, %d, '%s')", $node->vid, $node->nid, $node->url);
}

function ftpgallery_delete($node) {
  // Notice that we're matching all revision, by using the node's nid.
  db_query('DELETE FROM {ftpgallery_url} WHERE nid = %d', $node->nid);
}